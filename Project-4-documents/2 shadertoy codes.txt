#define NUM_OCTAVES 5

float rand(vec2 n) { 
	return fract(cos(dot(n, vec2(18.425, 4.1414))) * .043585 * iTime);
}

float noise(vec2 p){
	vec2 ip = floor(p);
	vec2 u = fract(p);
	u = u*u*(3.0-2.0*u);
	
	float res = mix(
		mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),
		mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);
	return res*res;
}

float fbm(vec2 x) {
	float v = 0.0;
	float a = 0.5;
	vec2 shift = vec2(100);
    mat2 rot = mat2(cos(iTime * .1), sin(iTime *.05), -sin(0.5), cos(0.50));
	for (int i = 0; i < NUM_OCTAVES; ++i) {
		v += a * noise(x);
		x = rot * x * 2.0 + shift;
		a *= 0.5;
	}
	return v;
}


void mainImage( out vec4 fragColor, in vec2 fragCoord ) {
    vec2 uv = (fragCoord.xy - iResolution.xy * .5) / iResolution.yy + 0.5;

    vec2 surface = vec2(fbm(5.0 * uv + 0.2 *iTime));

    uv += refract(vec2(0.0), surface, 1.0 / 1.333);

    vec4 color = texture(iChannel0, uv);
    
   
    fragColor = color;
}